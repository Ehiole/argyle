% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/io.R
\name{read.beadstudio}
\alias{read.beadstudio}
\title{Read genotype calls and hybridization from Illumina BeadStudio output.}
\usage{
read.beadstudio(prefix, snps, in.path = ".", keep.intensity = TRUE,
  colmap = NULL, verify = TRUE, checksum = TRUE, ...)
}
\arguments{
\item{prefix}{filename prefix, without working directory: the \code{*} in \code{*_FinalReport.zip}}

\item{snps}{dataframe containing marker map for this array, in PLINK's \code{*.bim} format
(chromosome, marker name, cM position, bp position); rownames should be set to marker names,
and those names should match those in the BeadStudio output.}

\item{in.path}{directory in which to search for input files}

\item{keep.intensity}{should hybridization intensities be kept in addition to genotype calls?}

\item{colmap}{named character vector mapping column names in \code{*FinalReport} to required columns
for \code{argyle} (see Details)}

\item{verify}{logical; if \code{TRUE}, check that \code{FinalReport} file is of expected size}

\item{checksum}{logical; if \code{TRUE}, generate an md5 checksum for the result}

\item{...}{ignored}
}
\value{
A \code{genotypes} object with genotype calls, marker map, sample metadata and (as requested)
	intensity data.
}
\description{
Read genotype calls and hybridization from Illumina BeadStudio output.
}
\details{
This function initializes a \code{genotypes} object from Illumina BeadStudio output. (For an
	example of the format, see the files in this package's \code{data/} directory.)  The two relevant
	files are \code{Sample_Map.zip} and \code{*FinalReport.zip}, which contain the sample manifest
	and genotype/intensity data, respectively.  On platforms with \code{unzip} available on the
	command line, files will be unzipped on the fly.  Otherwise \code{FinalReport.zip} (but not
	\code{Sample_Map.zip}) must be unzipped first.  This is due to the use of \code{data.table} to
	handle the usually very large genotypes file.
	
	Use the \code{colmap} vector to assign column names in the \code{*FinalReport} file to the required
	columns for argyle.  The required columns are \code{iid} (individual ID), \code{marker} (SNP/marker name),
	\code{call1} (allele 1, in the same strand as in the marker map), \code{call2} (allele 2, in the
	same strand as in the marker map), \code{x} (hybridization x-intensity) and \code{y} (hybridization
	y-intensity).  The default column mapping is:
 \itemize{
	\item \code{SNP Name} = \code{marker}
	\item \code{Sample ID} = \code{iid}
	\item \code{Allele1 - Forward} = \code{call1}
	\item \code{Allele2 - Forward} = \code{call2}
	\item \code{X} = \code{x}
	\item \code{Y} = \code{y}
	}
	Note that \code{colmap} must be a named character vector, with old column headers in the \code{names()}
	and new column names in the vector itself: eg. write \code{colmap = setNames( new, old )}.  An error
	will be thrown if the column mapping does not provide enough information to read the input properly.
	Particular attention should be paid to the encoding of the alleles in the \code{snps} object, which
	will be platform-specific.  For users of the Mouse Universal Genotyping Array series from Neogen Inc,
	alleles \code{A1,A2} in \code{snps} will be on the forward strand, so columns \code{Allele * - Forward}
	(not \code{Allele * - Top} or \code{Allele * - AB}) are the ones to use.
	
	The behavior of this function with respect to missing data in the genotypes versus the contents
	of \code{snps} is asymmetric.  Markers in \code{snps} which are absent in the input files will
	be present in the output, but with missing calls and intensities.  Markers in the input files
	which are missing from \code{snps} will simply be dropped.  If that occurs, check that the marker
	names in \code{snps} match exactly those in the input file.
	
	Provenance of the resulting object can be traced by checking \code{attr(,"source")}.  For the paranoid,
	a timestamp and checksum are provided in \code{attr(,"timestamp")} and \code{attr(,"md5")}.
}
\references{
Inspiration from Dan Gatti's DOQTL package: <https://github.com/dmgatti/DOQTL/blob/master/R/extract.raw.data.R>
}

